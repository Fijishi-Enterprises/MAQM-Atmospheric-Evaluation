#########################################################################
#                 STATIC INPUT FILE for Main R Scripts                  #
#-----------------------------------------------------------------------#
#                                                                       #
#                 Input to MET_spatial_surface.R                        #
#           For "STATIC" variables or those for advanced Users          #
#                     Developed by US EPA                               #
#                                                                       #
#-----------------------------------------------------------------------#
#########################################################################
# Change LOG
#-----------------------------------------------------------------------
# NEW, Dec 2021, Robert Gilliam
#  - This is a new convention for better GUI control where "setup", static
#    and advanced User options are pulled from old spatial_surface.input
#    and put in second input called a "static" input.
#  - Update MET_spatial_surface.R will read this, but work with
#    consolidated  old input.
#########################################################################

 # Surface data table in evaluation database
 sfctable	<-paste(model,"_surface",sep="")		

 # Define year, month, day and hour start/end as numbers
 # from date array
 ys <-as.numeric(substr(date[1],1,4))
 ye <-as.numeric(substr(date[2],1,4))
 ms <-as.numeric(substr(date[1],5,6))
 me <-as.numeric(substr(date[2],5,6))
 ds <-as.numeric(substr(date[1],7,8))
 de <-as.numeric(substr(date[2],7,8))
 hs <-as.numeric(substr(date[1],10,11))
 he <-as.numeric(substr(date[2],10,11))

#########################################################################
#	Configurable Statistics Definitions
#########################################################################
#             1       2        3    4      5     6       7    8       9        10       11       12       13     14     15
 statAbr<-c("count","corr","ac","var","sdev","rmse","mae","bias","mfbias","mnbias","mngerr","nmbias","nmerr","max","min")
 sget	<-c(3,5,6,7,8,14,15)
 vget	<-c(1,2,3,4)
 sfixed	<-c(6,8,3,2,5,7)
 vfixed	<-c(1,2,3)

 saveid	<-model

 if(is.na(hs) || is.na(he)) {
   hs<-0
   he<-23
 }
#---------------------------------------------------##
# Various set-up definitions for main plot function
 plotlab <-array(,)
 statid  <-c("Count","Correlation","Anomaly Correlation","Variance","Standard Deviation","RMSE","Mean Absolute Error",
           "Mean bias","Mean Fractional Bias","Mean Normalized Bias","Mean Normalized Gross Error",
           "Normailized Mean Bias","Normalized mean error","Difference Max Value","Difference of Min Value")
 varid   <-c("2 m Temperature (C)","Wind Speed (m/s)","Wind Direction (Deg.)","Mixing Ratio (g/kg)")

 statAbr <-c("count","corr","ac","var","sdev","rmse","mae","bias","mfbias","mnbias","mngerr","nmbias","nmerr","max","min")
 varAbr  <-c("T","WS","WD","Q")
 vget	 <-c(1,2,3,4)
 sget	 <-c(3,6,7,8)

 convfactor<-c(1.8,1.94,1,1)
 convfactor<-c(1,1,1,1)

  great	 <-gray(0.80)
  good	 <-"green"
  fair	 <-"blue"
  caut	 <-"yellow"
  quest	 <-"red"
  bad	 <-"black"
#################################################
# Plotting Protocol defnitions (colors, scales, etc)
# These are pretty esoteric. A user will have to read code
# to see how these are used. In general though, L* stands for
# levels for each statistics and C* for corresponding color

  levcols<-array(NA,c(length(statid),length(varid),20))
  levs   <-array(NA,c(length(statid),length(varid),20))

# Typical Error and bias range w/ color scale
 L1  <-c(seq(0.75,3,by=0.25),4,10)
 L1  <-c(0,0.50,1,1.5,2,2.5,3,4,5,6,7,8)
 C1  <-tim.colors(length(L1))

 L2  <-c(-3,-2,-1,-0.5,-0.25,0,0.25,0.5,1,2,3,4)
 C2  <-tim.colors(length(L2))
 C2[length(L2)/2]<-great

# Error and bias scale for wind direction
 L1wd<-c(0,10,20,30,40,50,60,70,80,90,135,180)
 C1wd<-rev(rainbow(length(L1wd)))

 L2wd<-c(-40,-30,-20,-10,0,10,20,30,40)
 C2wd<-rev(rainbow(length(L2wd)))
 C2wd[(length(L2wd)/2)+1]<-great

# Fractional and normalized scales
 L1n<-c(0,5,10,15,20)
 C1n<-c("green","blue","yellow","red","red")
 L2n<-c(-20,-15,-10,-5,0,5,10,15,20)
 C2n<-c("red","yellow","blue","green","green","blue","yellow","red","red")
 C2n<-rev(rainbow(length(L2n)))

# Typical  range w/ color scale for Index of Agreement/Correlation Type plots
 L1iT<-c(0.0,seq(0.5,1,by=0.05))
 L1iW<-c(0,0.2,0.4,0.5,0.6,0.7,0.8,0.9,1.0)
 L1iW<-c(seq(0,1,by=0.1))
 C1iT<-tim.colors(length(L1iT))
 C1iW<-tim.colors(length(L1iW))

     levs[1,,1]<-NA	# Set all count stats to NA (Plot Function will automatically set levels)  
# 	Define Temperature Stat levels and colorscale
     levs[2,1,1:length(L1iT)]<-L1iT; levcols[2,1,1:length(C1iT)]<-C1iT
     levs[3,1,1:length(L1iT)]<-L1iT; levcols[3,1,1:length(C1iT)]<-C1iT

     levs[4,1,1:length(L1)]<-L1;   levcols[4,1,1:length(C1)]<-C1
     levs[5,1,1:length(L1)]<-L1;   levcols[5,1,1:length(C1)]<-C1
     levs[6,1,1:length(L1)]<-L1;   levcols[6,1,1:length(C1)]<-C1
     levs[7,1,1:length(L1)]<-L1;   levcols[7,1,1:length(C1)]<-C1
     levs[8,1,1:length(L2)]<-L2;   levcols[8,1,1:length(C2)]<-C2

     levs[9,1,1:length(L1n)]<-L1n;   levcols[9,1,1:length(C1n)]<-C1n
     levs[10,1,1:length(L2n)]<-L2n;  levcols[10,1,1:length(C2n)]<-C2n
     levs[11,1,1:length(L1n)]<-L1n;  levcols[11,1,1:length(C1n)]<-C1n
     levs[12,1,1:length(L2n)]<-L2n;  levcols[12,1,1:length(C2n)]<-C2n
     levs[13,1,1:length(L1n)]<-L1n;  levcols[13,1,1:length(C1n)]<-C1n
     levs[14,1,1:length(L2)]<-L2;   levcols[14,1,1:length(C2)]<-C2
     levs[15,1,1:length(L2)]<-L2;   levcols[15,1,1:length(C2)]<-C2
##########################################################################
# 	Define Wind Speed Stat levels and colorscale
     levs[2,2,1:length(L1iW)]<-L1iW; levcols[2,2,1:length(C1iW)]<-C1iW
     levs[3,2,1:length(L1iW)]<-L1iW; levcols[3,2,1:length(C1iW)]<-C1iW

     levs[4,2,1:length(L1)]<-L1;   levcols[4,2,1:length(C1)]<-C1
     levs[5,2,1:length(L1)]<-L1;   levcols[5,2,1:length(C1)]<-C1
     levs[6,2,1:length(L1)]<-L1;   levcols[6,2,1:length(C1)]<-C1
     levs[7,2,1:length(L1)]<-L1;   levcols[7,2,1:length(C1)]<-C1
     levs[8,2,1:length(L2)]<-L2;   levcols[8,2,1:length(C2)]<-C2

     levs[9,2,1:length(L1n)]<-L1n;   levcols[9,2,1:length(C1n)]<-C1n
     levs[10,2,1:length(L2n)]<-L2n;  levcols[10,2,1:length(C2n)]<-C2n
     levs[11,2,1:length(L1n)]<-L1n;  levcols[11,2,1:length(C1n)]<-C1n
     levs[12,2,1:length(L2n)]<-L2n;  levcols[12,2,1:length(C2n)]<-C2n
     levs[13,2,1:length(L1n)]<-L1n;  levcols[13,2,1:length(C1n)]<-C1n
     levs[14,2,1:length(L2)]<-L2;   levcols[14,2,1:length(C2)]<-C2
     levs[15,2,1:length(L2)]<-L2;   levcols[15,2,1:length(C2)]<-C2
##########################################################################
# 	Define Wind Direction Stat levels and colorscale
     levs[2,3,1:length(L1iW)]<-L1iW; levcols[2,3,1:length(C1iW)]<-C1iW
     levs[3,3,1:length(L1iW)]<-L1iW; levcols[3,3,1:length(C1iW)]<-C1iW

     levs[4,3,1:length(L1wd)]<-L1wd;   levcols[4,3,1:length(C1wd)]<-C1wd
     levs[5,3,1:length(L1wd)]<-L1wd;   levcols[5,3,1:length(C1wd)]<-C1wd
     levs[6,3,1:length(L1wd)]<-L1wd;   levcols[6,3,1:length(C1wd)]<-C1wd
     levs[7,3,1:length(L1wd)]<-L1wd;   levcols[7,3,1:length(C1wd)]<-C1wd
     levs[8,3,1:length(L2wd)]<-L2wd;   levcols[8,3,1:length(C2wd)]<-C2wd

     levs[9,3,1:length(L1n)]<-L1n;   levcols[9,3,1:length(C1n)]<-C1n
     levs[10,3,1:length(L2n)]<-L2n;  levcols[10,3,1:length(C2n)]<-C2n
     levs[11,3,1:length(L1n)]<-L1n;  levcols[11,3,1:length(C1n)]<-C1n
     levs[12,3,1:length(L2n)]<-L2n;  levcols[12,3,1:length(C2n)]<-C2n
     levs[13,3,1:length(L1n)]<-L1n;  levcols[13,3,1:length(C1n)]<-C1n
     levs[14,3,1:length(L2wd)]<-L2wd;   levcols[14,3,1:length(C2wd)]<-C2wd
     levs[15,3,1:length(L2wd)]<-L2wd;   levcols[15,3,1:length(C2wd)]<-C2wd

##########################################################################
# 	Define Mixing Ratio Stat levels and colorscale
     levs[2,4,1:length(L1iT)]<-L1iT; levcols[2,4,1:length(C1iT)]<-C1iT
     levs[3,4,1:length(L1iT)]<-L1iT; levcols[3,4,1:length(C1iT)]<-C1iT

     levs[4,4,1:length(L1)]<-L1;   levcols[4,4,1:length(C1)]<-C1
     levs[5,4,1:length(L1)]<-L1;   levcols[5,4,1:length(C1)]<-C1
     levs[6,4,1:length(L1)]<-L1;   levcols[6,4,1:length(C1)]<-C1
     levs[7,4,1:length(L1)]<-L1;   levcols[7,4,1:length(C1)]<-C1
     levs[8,4,1:length(L2)]<-L2;   levcols[8,4,1:length(C2)]<-C2

     levs[9,4,1:length(L1n)]<-L1n;   levcols[9,4,1:length(C1n)]<-C1n
     levs[10,4,1:length(L2n)]<-L2n;  levcols[10,4,1:length(C2n)]<-C2n
     levs[11,4,1:length(L1n)]<-L1n;  levcols[11,4,1:length(C1n)]<-C1n
     levs[12,4,1:length(L2n)]<-L2n;  levcols[12,4,1:length(C2n)]<-C2n
     levs[13,4,1:length(L1n)]<-L1n;  levcols[13,4,1:length(C1n)]<-C1n
     levs[14,4,1:length(L2)]<-L2;   levcols[14,4,1:length(C2)]<-C2
     levs[15,4,1:length(L2)]<-L2;   levcols[15,4,1:length(C2)]<-C2
#########################################################################
#----- 			END OF INPUT FILE	------------------------#
#########################################################################
 

